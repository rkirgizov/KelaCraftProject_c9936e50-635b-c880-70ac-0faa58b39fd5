<ls:UIWidget x:Name="Insert"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=Code"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
             mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
             ls:UIWidget.UseCustomDC="True"
             ls:UIWidget.ContextName="Insert">
    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Core;component/Library/DiceAnimation.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <b:Interaction.Triggers>
        <!-- Sound feedbacks-->
        <b:DataTrigger Binding="{Binding CurrentState}" Value="Success">
            <ls:LSPlaySound Sound="UI_HUD_Insert_Success"/>
        </b:DataTrigger>
        <b:DataTrigger Binding="{Binding CurrentState}" Value="Fail">
            <b:Interaction.Behaviors>
                <b:ConditionBehavior>
                    <b:ConditionalExpression>
                        <b:ComparisonCondition LeftOperand="{Binding FailReason}" Operator="Equal" RightOperand="Invalid"/>
                    </b:ConditionalExpression>
                </b:ConditionBehavior>
            </b:Interaction.Behaviors>
            <ls:LSPlaySound Sound="UI_HUD_Insert_Failure"/>
        </b:DataTrigger>

        <b:DataTrigger Binding="{Binding CurrentState}" Value="Fail">
            <b:Interaction.Behaviors>
                <b:ConditionBehavior>
                    <b:ConditionalExpression>
                        <b:ComparisonCondition LeftOperand="{Binding FailReason}" Operator="NotEqual" RightOperand="Invalid"/>
                    </b:ConditionalExpression>
                </b:ConditionBehavior>
            </b:Interaction.Behaviors>
            <ls:LSPlaySound Sound="UI_HUD_Insert_Error"/>
        </b:DataTrigger>

        <b:EventTrigger EventName="Loaded">
            <ls:LSPlaySound Sound="UI_HUD_Insert_Open"/>
        </b:EventTrigger>

        <b:EventTrigger EventName="Unloaded">
            <ls:LSPlaySound Sound="UI_HUD_Insert_Close"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Center" ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}" Margin="0,0,1000,0">
        <b:Interaction.Behaviors>
            <ls:LSMouseDragElementBehavior/>
        </b:Interaction.Behaviors>
        <ls:LSNineSliceImage Grid.Row="1" IconWidth="480" MinWidth="700" Height="600" Slices="48 40 48 100"  HorizontalAlignment="Center" ImageSource="pack://application:,,,/Core;component/Assets/Container/container_background.png">
            <Grid HorizontalAlignment="Center">
                <Control>
                    <Control.Template>
                        <ControlTemplate>
                            <ControlTemplate.Resources>
                                <KeyTime x:Key="vfxTrailTimeStart">0:0:1</KeyTime>
                                <KeyTime x:Key="vfxTrailTimeEnd">0:0:1.90</KeyTime>
                                <Storyboard x:Key="FailAnimation" Duration="0:0:2">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemFailFrame" BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Title" BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.75" Value="0.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1.0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FeedbackTitle" BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.75" Value="1.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation From="1.0" To="0.0" BeginTime="0:0:1" Duration="0:0:1" Storyboard.TargetName="SlotsList" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                                <Storyboard x:Key="SuccessAnimation" Duration="0:0:2.5">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemSuccessFrame" BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1.0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0.0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Title" BeginTime="0:0:0.5" Duration="0:0:0.25" From="1.0" To="0.0"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FeedbackTitle" BeginTime="0:0:0.75" Duration="0:0:0.25" From="0.0" To="1.0"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplosionText">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:1.53" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailLeft">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxTrailTimeStart}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxTrailTimeEnd}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailRight">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxTrailTimeStart}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxTrailTimeEnd}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="InstantFadeInItems" Duration="0">
                                    <DoubleAnimation To="1.0" Duration="0" Storyboard.TargetName="SlotsList" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Grid x:Name="BaseItemHolder" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-190,0,0">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseEnter">
                                            <b:InvokeCommandAction Command="{Binding HighlightGameobject}" CommandParameter="{Binding BaseItem}"/>
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="MouseLeave">
                                            <b:InvokeCommandAction Command="{Binding ClearHighlightGameobject}" CommandParameter="{Binding BaseItem}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>

                                    <Image x:Name="TabBG" Source="pack://application:,,,/Core;component/Assets/Container/container_itemTab_active_d.png" Stretch="None" VerticalAlignment="Bottom"/>
                                    <ls:LSEntityObject VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,40" Width="{StaticResource ContItemIconSize}" Height="{StaticResource ContItemIconSize}" EntityRef="{Binding BaseItem.EntityHandle}" Context="Insert" >
                                        <ContentPresenter ContentTemplate="{StaticResource Template.GameObject}" Content="{Binding BaseItem}" />
                                    </ls:LSEntityObject>
                                </Grid>

                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,40,0,0">
                                    <Grid>
                                        <TextBlock x:Name="Title" Foreground="{DynamicResource LS_specialTxtColor}" FontSize="{DynamicResource IntermediateFontSize}" HorizontalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Source='hb09a5276g3e7dg478dga32dg37c44b0b34ff', Converter={StaticResource TranslatedStringConverter}}"/>
                                        <TextBlock x:Name="FeedbackTitle" HorizontalAlignment="Center" FontSize="{StaticResource DefaultFontSize}" TextWrapping="Wrap" Foreground="{StaticResource LS_alertTxtColor}" Opacity="0"/>
                                    </Grid>
                                    <TextBlock x:Name="FeedbackSubtitle" HorizontalAlignment="Center" FontSize="{StaticResource DefaultFontSize}" TextWrapping="Wrap" Foreground="{StaticResource LS_alertTxtColor}"/>
                                </StackPanel>
                                <ls:AnimatedImage Style="{StaticResource popExplosionVfx}" x:Name="PopExplosionText" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-80,0,0"/>
                                <ls:AnimatedImage Style="{StaticResource trailVfx}" x:Name="TrailLeft" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <ls:AnimatedImage.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform X="-290" Y="180"/>
                                        </TransformGroup>
                                    </ls:AnimatedImage.RenderTransform>
                                </ls:AnimatedImage>
                                <ls:AnimatedImage Style="{StaticResource trailVfx}" x:Name="TrailRight" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <ls:AnimatedImage.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="510" Y="-50"/>
                                        </TransformGroup>
                                    </ls:AnimatedImage.RenderTransform>
                                </ls:AnimatedImage>

                                <Image x:Name="SlotsBg" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="60,0" Source="pack://application:,,,/Core;component/Assets/Insert/insert_x1.png"/>
                                <Image x:Name="ItemFailFrame" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="150,0" Source="pack://application:,,,/Core;component/Assets/Insert/itemFailFrame.png" Opacity="0"/>
                                <Image x:Name="ItemSuccessFrame" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="150,0" Source="pack://application:,,,/Core;component/Assets/Insert/itemSuccessFrame.png" Opacity="0"/>

                                <b:Interaction.Triggers>
                                    <b:StoryboardCompletedTrigger Storyboard="{StaticResource FailAnimation}">
                                        <b:InvokeCommandAction Command="{Binding DataContext.ClearAllSlotsCommand,ElementName=Insert}"/>
                                    </b:StoryboardCompletedTrigger>
                                    <b:StoryboardCompletedTrigger Storyboard="{StaticResource SuccessAnimation}">
                                        <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent,ElementName=Insert}" CommandParameter="CloseInsertWidget"/>
                                    </b:StoryboardCompletedTrigger>
                                </b:Interaction.Triggers>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Slots amount triggers -->
                                <DataTrigger Binding="{Binding Slots}" Value="1">
                                    <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2dfd127age5cag4ad6g9fd3gbcb3ae93e135', Converter={StaticResource TranslatedStringConverter}}"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Slots}" Value="2">
                                    <Setter TargetName="SlotsBg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x2.png"/>
                                    <Setter TargetName="ItemFailFrame" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x2_fail.png"/>
                                    <Setter TargetName="ItemSuccessFrame" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x2_success.png"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Slots}" Value="3">
                                    <Setter TargetName="SlotsBg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x3.png"/>
                                    <Setter TargetName="ItemFailFrame" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x3_fail.png"/>
                                    <Setter TargetName="ItemSuccessFrame" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x3_success.png"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Slots}" Value="4">
                                    <Setter TargetName="SlotsBg" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x4.png"/>
                                    <Setter TargetName="ItemFailFrame" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x4_fail.png"/>
                                    <Setter TargetName="ItemSuccessFrame" Property="Source" Value="pack://application:,,,/Core;component/Assets/Insert/insert_x4_success.png"/>
                                </DataTrigger>

                                <!-- Feedback triggers -->
                                <DataTrigger Binding="{Binding CurrentState}" Value="Success">
                                    <Setter TargetName="FeedbackTitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc0ee053eg9dfbg4144g984egb2f994a8cc30', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <Setter TargetName="FeedbackTitle" Property="Foreground" Value="{StaticResource LS_specialTxtColor}"/>
                                    <Setter TargetName="TabBG" Property="Opacity" Value="0.65"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource SuccessAnimation}"/>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="Invalid">
                                    <Setter TargetName="FeedbackTitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h47f58fa7g6e37g42fag8408gd89ae7856b9d', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FailAnimation}"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource InstantFadeInItems}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="TooFar">
                                    <Setter TargetName="FeedbackSubtitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1371c0f2g99ccg47a3g8012g9c240aec2b50', Converter={StaticResource TranslatedStringConverter}}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="NotAllFilled">
                                    <Setter TargetName="FeedbackSubtitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2a223e63g1953g4a41gb631gfe287b044889', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FailAnimation}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource InstantFadeInItems}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="Duplicate">
                                    <Setter TargetName="FeedbackTitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h85a8d808g354ag4709g8dbfg39437b3403e7', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FailAnimation}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource InstantFadeInItems}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="BaseNotFound">
                                    <Setter TargetName="FeedbackTitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h84799792gde2eg4c66g8a6bgc6ae05feaa02', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FailAnimation}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource InstantFadeInItems}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="IngredientNotFound">
                                    <Setter TargetName="FeedbackTitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h90ce0538g95a1g4d73gb5c5g54a4dae1c4e9', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FailAnimation}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource InstantFadeInItems}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="Interrupted">
                                    <Setter TargetName="FeedbackTitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he3d62e55g4ed3g49fagb679ge4d9ef4a50b8', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FailAnimation}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource InstantFadeInItems}"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="NotEmptySlot">
                                    <Setter TargetName="FeedbackSubtitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he1c084aag96c0g4716gb47cge9f7e6e5b69d', Converter={StaticResource TranslatedStringConverter}}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FailReason}" Value="IngredientAlreadyAdded">
                                    <Setter TargetName="FeedbackSubtitle" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5a6c11e8gf30eg4543g8cb4ge288199d523d', Converter={StaticResource TranslatedStringConverter}}"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Control.Template>
                </Control>

                <ls:LSListBox x:Name="SlotsList" ItemsSource="{Binding Ingredients}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,8" AlternationCount="{Binding Ingredients.Count}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ls:LSListBox.ItemContainerStyle>
                        <Style TargetType="ls:LSListBoxItem" BasedOn="{StaticResource {x:Type ls:LSListBoxItem}}">
                            <Setter Property="Margin" Value="12,0"/>
                        </Style>
                    </ls:LSListBox.ItemContainerStyle>
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <KeyTime x:Key="vfxBucketTimeStart">0:0:0.20</KeyTime>
                                <KeyTime x:Key="vfxBucketTimeEnd">0:0:1.18</KeyTime>
                                <Storyboard x:Key="SuccessAnimationItems" Duration="0:0:2.5">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplosionItem">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.78" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="bucketTopLeft">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeStart}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeEnd}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="bucketTopRight">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeStart}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeEnd}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="bucketBottomLeft">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeStart}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeEnd}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="bucketBottomRight">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeStart}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTimeEnd}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </DataTemplate.Resources>
                            <!-- Tag is required to know what slot index we're trying to add an item to -->
                            <Button x:Name="Slot" Tag="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType={x:Type ls:LSListBoxItem}}}" Margin="18,0" ToolTipService.IsEnabled="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToBoolFalseConverter}}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="Transparent" Padding="0">
                                <Button.ToolTip>
                                    <ls:LSTooltip Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Button.ToolTip>
                                <b:Interaction.Behaviors>
                                    <ls:DragGenericBehavior StartDragCommand="{Binding DataContext.StartDragCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" AllowDrag="{Binding DataContext, ElementName=Slot, Converter={StaticResource NullToBoolFalseConverter}}"/>
                                    <ls:DropOnGenericBehavior DropCommand="{Binding DataContext.DropSlotCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                </b:Interaction.Behaviors>
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="MouseEnter">
                                        <ls:LSPlaySound Sound="UI_Shared_Hover"/>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="Click">
                                        <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent ,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="ToggleCharacterPanel"/>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="MouseRightButtonUp">
                                        <b:InvokeCommandAction Command="{Binding DataContext.ClearSlotCommand, ElementName=Insert}" CommandParameter="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType={x:Type ls:LSListBoxItem}}}"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>

                                <Grid x:Name="SlotContent" Width="{StaticResource ContInvSlotSize}" Height="{StaticResource ContInvSlotSize}">

                                    <Border BorderThickness="2" x:Name="borderSlot" IsHitTestVisible="False" BorderBrush="Transparent" Background="Transparent"/>

                                    <ls:LSEntityObject EntityRef="{Binding EntityHandle}" Context="Inventory" IsHitTestVisible="False" Width="{StaticResource ContItemIconSize}" Height="{StaticResource ContItemIconSize}">
                                        <ContentPresenter ContentTemplate="{StaticResource Template.GameObject}" Content="{Binding .}" />
                                    </ls:LSEntityObject>

                                    <!-- Grid clips children no matter what, so we put these inside a Canvas, which doesn't clip its children. This way they can step outside the Grid Boundaries -->
                                    <Canvas>
                                        <ls:AnimatedImage Style="{StaticResource popExplosionVfx}" x:Name="PopExplosionItem" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                      Canvas.Left="-55" Canvas.Top="-64"/>
                                        <ls:AnimatedImage Style="{StaticResource bucketEdgeVfx}" HorizontalAlignment="Left" VerticalAlignment="Top" x:Name="bucketTopLeft"
                                                      Canvas.Left="-80" Canvas.Top="-80"/>
                                        <ls:AnimatedImage Style="{StaticResource bucketEdgeVfx}" HorizontalAlignment="Right" VerticalAlignment="Top" x:Name="bucketTopRight"
                                                      Canvas.Right="-80" Canvas.Top="-80" RenderTransformOrigin="0.5,0">
                                            <ls:AnimatedImage.RenderTransform>
                                                <ScaleTransform ScaleX="-1"/>
                                            </ls:AnimatedImage.RenderTransform>
                                        </ls:AnimatedImage>
                                        <ls:AnimatedImage Style="{StaticResource bucketEdgeVfx}" HorizontalAlignment="Left" VerticalAlignment="Bottom" x:Name="bucketBottomLeft"
                                                      Canvas.Left="-80" Canvas.Bottom="-80" RenderTransformOrigin="0,0.5">
                                            <ls:AnimatedImage.RenderTransform>
                                                <ScaleTransform ScaleY="-1"/>
                                            </ls:AnimatedImage.RenderTransform>
                                        </ls:AnimatedImage>
                                        <ls:AnimatedImage Style="{StaticResource bucketEdgeVfx}" HorizontalAlignment="Right" VerticalAlignment="Bottom" x:Name="bucketBottomRight"
                                                      Canvas.Right="-80" Canvas.Bottom="-80" RenderTransformOrigin="0.5,0.5">
                                            <ls:AnimatedImage.RenderTransform>
                                                <ScaleTransform ScaleX="-1" ScaleY="-1"/>
                                            </ls:AnimatedImage.RenderTransform>
                                        </ls:AnimatedImage>
                                    </Canvas>

                                </Grid>
                            </Button>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Success">
                                    <Setter Property="Opacity" Value="0.65"/>
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource SuccessAnimationItems}"/>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding DataContext.FailReason, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="NotAllFilled">
                                    <Setter TargetName="borderSlot" Property="BorderBrush" Value="{StaticResource LS_alertTxtColor}"/>
                                    <Setter TargetName="borderSlot" Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Opacity="0.5" Color="{StaticResource alertColor}"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="borderSlot" Property="BorderBrush" Value="{StaticResource LS_tint100}"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </Grid>
        </ls:LSNineSliceImage>
        <ls:LSButton Style="{StaticResource PopUpCloseButton}" Content="" Command="{Binding CustomEvent}" CommandParameter="CloseInsertWidget" x:Name="CloseBtn" VerticalAlignment="Top" HorizontalAlignment="Right"  Margin="0,30,-16,0" SoundID="UI_Shared_Cancel" />
        <!-- CommandParameter is the action duration -->
        <ls:LSButton x:Name="ButtonInsert" Command="{Binding StartActionCommand}" CommandParameter="0" HorizontalAlignment="Center"
                     VerticalAlignment="Bottom" Margin="0,0,0,44" Content="{Binding Source='h15bd3b8fg31e9g4316gb17fg6bff80e8d050', Converter={StaticResource TranslatedStringConverter}}"
                     Foreground="{StaticResource LS_specialTxtColor}">
            <ls:LSButton.Style>
                <Style TargetType="ls:LSButton" BasedOn="{StaticResource BrownButtonStyle}">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentState}" Value="Ready">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FailReason}" Value="Interrupted">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FailReason}" Value="NotEmptySlot">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FailReason}" Value="IngredientAlreadyAdded">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ls:LSButton.Style>
        </ls:LSButton>
    </Grid>

</ls:UIWidget>