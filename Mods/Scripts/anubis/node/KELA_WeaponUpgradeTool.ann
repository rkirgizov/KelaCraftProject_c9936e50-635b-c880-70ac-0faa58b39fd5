game.states.KELA_WeaponUpgradeTool = State{ function ()

    modules = {"kela.util"}

    -- DC 
    local DC_WithoutOil    = DifficultyClass("DC_WithoutOil_037842fe-d4cc-435f-896b-fab76f050d5e")
    local DC_NoBlacksmith  = DifficultyClass("DC_NoBlacksmith_8a813eb2-a3a1-4387-b316-1925ed3bf95c")
    local DC_Blacksmith12  = DifficultyClass("DC_Blacksmith12_9e816e4c-8855-45f9-8a63-af821560dbb9")
    local DC_Blacksmith10  = DifficultyClass("DC_Blacksmith10_413fb020-fe89-4a21-a897-c964077b22ce")
    local DC_Blacksmith8   = DifficultyClass("DC_Blacksmith8_42965a0b-abad-4174-b7c7-4365c936c9fd")
    local DC_Blacksmith6   = DifficultyClass("DC_Blacksmith6_adb51e69-4408-49e7-8969-29dd3b9d264b")
    local DC_Blacksmith4   = DifficultyClass("DC_Blacksmith4_9b381c50-5f3e-4b33-8890-dc2bb37336fb")
    local DC_Blacksmith    = DifficultyClass("DC_Blacksmith_7a53f100-1fba-4b68-aff9-cb2fcc5b5622")       
    
    -- Upgrade Statuses
    local upgradeStatusesBad = {
        "KELA_WEAPON_UPGRADED_0_1", 
        "KELA_WEAPON_UPGRADED_0_2", 
        "KELA_WEAPON_UPGRADED_0_3", 
    }
    local upgradeStatusesGood = {
        "KELA_WEAPON_UPGRADED_1", 
        "KELA_WEAPON_UPGRADED_2", 
        "KELA_WEAPON_UPGRADED_3", 
        "KELA_WEAPON_UPGRADED_4", 
        "KELA_WEAPON_UPGRADED_5", 
        "KELA_WEAPON_GUILD_ARTISAN_BONUS", 
    }
    local upgradeStatusBad_1        = "KELA_WEAPON_UPGRADED_0_1"
    local upgradeStatusBad_2        = "KELA_WEAPON_UPGRADED_0_2"
    local upgradeStatusBad_3        = "KELA_WEAPON_UPGRADED_0_3"
    local upgradeStatusGood_1       = "KELA_WEAPON_UPGRADED_1"
    local upgradeStatusGood_2       = "KELA_WEAPON_UPGRADED_2"
    local upgradeStatusGood_3       = "KELA_WEAPON_UPGRADED_3"
    local upgradeStatusGood_4       = "KELA_WEAPON_UPGRADED_4"
    local upgradeStatusGood_5       = "KELA_WEAPON_UPGRADED_5"
    local upgradeStatusGood_Artisan = "KELA_WEAPON_GUILD_ARTISAN_BONUS"

    -- user
    local user
    local userLevel
    local userBlacksmith
    local userBlacksmithApprentice
    local userGuildArtisan
    -- tool and weapon
    local coreTool
    local coreToolTag
    local messageNoSuitableWeapon
    local validWeaponForUpgrade
    local weaponIsDamaged
    local isProficientWithWeaponForUpgrade
    -- oil
    local ownerOfSmithOil
    -- proccess
    local messageInProcess
    local blacksmithConditionDC
    local statusForUpgrade

    helpers.Init = function()
    end

    helpers.UseStartedSetup = function(e)
        
        if isProficientWithWeaponForUpgrade then
            ApplyStatus(user, "KELA_WEAPON_PROFICIENCY_SKILLCHECK_BONUS", true, -1, me)
        end
        
        userBlacksmith = false
        userBlacksmithApprentice = false
        if IsTagged(user, Tag("KELABLACKSMITH_c78b77b9-b33c-43fb-8dec-a91bacebb1bf")) then
            userBlacksmith = true
        elseif IsTagged(user, Tag("KELABLACKSMITHAPPRENTICE_5c77c6bf-22f7-4109-b9f8-21e3bd7a2634")) then
            userBlacksmithApprentice = true
        end
        
        userGuildArtisan = false
        if IsTagged(user, Tag("GUILD_ARTISAN_baf9fb0e-f535-40a0-bb78-3ec289d84e66")) then
            userGuildArtisan = true
        end

    end

    helpers.GetValidWeaponForUpgrade = function()
        weaponIsDamaged = false
        local equippedWeaponActive = GetEquippedWeapon(user.Character, WeaponHandType.MainHand)
        -- no active weapon
        if equippedWeaponActive == null then
            return null
        end
        -- weapon too damaged
        if HasActiveStatus(equippedWeaponActive, "KELA_WEAPON_UPGRADED_0_3") then
            weaponIsDamaged = true
            return null
        end
        if (coreToolTag == "KELAANVIL" and mod.util.IsAnvilWeapon(equippedWeaponActive)) 
            or (coreToolTag == "KELAWHETSTONE" and mod.util.IsWhetstoneWeapon(equippedWeaponActive)) then
            return equippedWeaponActive
        end
        if coreToolTag == "KELAWORKBENCH" then
            if mod.util.IsElf(user) and not (userBlacksmith or userBlacksmithApprentice or userGuildArtisan) then
                if mod.util.IsRangedWeapon(equippedWeaponActive) and mod.util.IsWorkbenchWeapon(equippedWeaponActive) then
                    return equippedWeaponActive
                else
                    messageNoSuitableWeapon = "KELA_MESSAGE_NO_SUITABLE_WEAPON_RANGED"
                end
            elseif mod.util.IsWorkbenchWeapon(equippedWeaponActive) then
                return equippedWeaponActive
            end
        end
        return null
    end

    helpers.CanPlayerUseTool = function()
        -- can this player use the tool?
        if coreToolTag == "KELAANVIL" then 
            if not (userBlacksmith or userBlacksmithApprentice or userGuildArtisan) then 
                -- message
                ApplyStatus(coreTool, "KELA_MESSAGE_NO_KNOWLEDGE_ANVIL", true, 5.0, user)
                return false
            end
            if HasActiveStatus(coreTool, "KELA_SMELTINGFORGE_AURA_STAGE_2_ANVIL") then 
                -- message
                ApplyStatus(coreTool, "KELA_MESSAGE_ANVIL_FIRE_TOO_HOT", true, 5.0, user)
                return false
            end
            if not HasActiveStatus(coreTool, "KELA_SMELTINGFORGE_AURA_STAGE_1_ANVIL") then 
                -- message
                ApplyStatus(coreTool, "KELA_MESSAGE_ANVIL_NOT_FIRE", true, 5.0, user)
                return false
            end
        end
        if coreToolTag == "KELAWORKBENCH" and not (userBlacksmith or userBlacksmithApprentice or userGuildArtisan or mod.util.IsElf(user)) then
            -- message
            ApplyStatus(coreTool, "KELA_MESSAGE_NO_KNOWLEDGE_WORKBENCH", true, 5.0, user)
            return false
        end
        return true
    end

    -- Remove upgrades
    helpers.RemoveAllUpgrades = function()
        helpers.RemoveGoodUpgrades()
        helpers.RemoveBadUpgrades()    
    end
    helpers.RemoveGoodUpgrades = function()
        if validWeaponForUpgrade ~= null then 
            for i = #upgradeStatusesGood, 1, -1 do
                RemoveStatus(validWeaponForUpgrade, upgradeStatusesGood[i])
            end
        end
    end
    helpers.RemoveBadUpgrades = function()
        if validWeaponForUpgrade ~= null then 
            for i = #upgradeStatusesBad, 1, -1 do
                RemoveStatus(validWeaponForUpgrade, upgradeStatusesBad[i])
            end     
        end
    end

    -- set statuses for upgrade
    helpers.SetStatusForGoodUpgrade = function()
        statusForUpgrade = upgradeStatusGood_1
        if userLevel >= 6 and isProficientWithWeaponForUpgrade then
            RequestPassiveRoll(user.Character, me, Skill.SleightOfHand, DifficultyClass("DC_Blacksmith6_adb51e69-4408-49e7-8969-29dd3b9d264b"), "KELA_SetStatusForGoodUpgrade_RollEvent")
        elseif userLevel >= 12 then
            statusForUpgrade = upgradeStatusGood_4
        elseif userLevel >= 10 then
            statusForUpgrade = upgradeStatusGood_3
        elseif userLevel >= 8 then
            statusForUpgrade = upgradeStatusGood_2
        end
    end
    helpers.SetStatusForBadUpgrade = function()
        statusForUpgrade = upgradeStatusBad_1
        if HasActiveStatus(validWeaponForUpgrade, upgradeStatusBad_1) then
            RemoveStatus(validWeaponForUpgrade, upgradeStatusBad_1)
            statusForUpgrade = upgradeStatusBad_2
        elseif HasActiveStatus(validWeaponForUpgrade, upgradeStatusBad_2) then
            RemoveStatus(validWeaponForUpgrade, upgradeStatusBad_2)
            statusForUpgrade = upgradeStatusBad_3
        end       
    end

    helpers.StartUpgrading = function()
        -- if weapon not match with main
        local equippedWeapon = GetEquippedWeapon(user.Character, WeaponHandType.MainHand)
        if validWeaponForUpgrade ~= nil and validWeaponForUpgrade ~= equippedWeapon then
            Unequip(user.Character, validWeaponForUpgrade.Item)
            Equip(user.Character, validWeaponForUpgrade.Item)
        end

        SetWeaponUnsheathed(user, true, false)
        SetEntityEvent(coreTool,"KELA_Apply_Craft_Effect")

        -- disable user movement 1 turn
        ApplyStatus(user, "KELA_USER_BLOCK_MOVEMENT", true, 4.0, coreTool)   
        ApplyStatus(coreTool, messageInProcess, true, 15.0, user)   
        RemoveStatus(coreTool, "KELA_MESSAGE_PLAYER_HAS_NOT_SMITH_OIL")    
        
        if userGuildArtisan then
            ApplyStatus(user, "KELA_GUILD_ARTISAN_SKILLCHECK_BONUS", true, -1, me)
        end
        if HasActiveStatus(user, "ALCH_ELIXIR_CONCENTRATION") then 
            ApplyStatus(user, "KELA_ALCH_ELIXIR_CONCENTRATION_BONUS", true, -1, me)
        end
        if ownerOfSmithOil ~= null then
            SetEntityEvent(ownerOfSmithOil,"KELA_Blacksmiths_Oil_Used")
        end
              
        SetEntityEvent(me,"KELA_Start_Upgrade_Timer")
    end

    helpers.StopUpgrading = function()
        blacksmithConditionDC = null
        if ownerOfSmithOil == null then
            blacksmithConditionDC = DC_WithoutOil -- 18
        elseif not userBlacksmith then
            blacksmithConditionDC = DC_NoBlacksmith -- 16
        elseif userLevel >= 12 then
            blacksmithConditionDC = DC_Blacksmith12 -- 6
        elseif userLevel >= 10 then
            blacksmithConditionDC = DC_Blacksmith10 -- 8
        elseif userLevel >= 8 then
            blacksmithConditionDC = DC_Blacksmith8 -- 10
        elseif userLevel >= 6 then
            blacksmithConditionDC = DC_Blacksmith6 -- 12
        elseif userLevel >= 4 then
            blacksmithConditionDC = DC_Blacksmith4 -- 14
        else
            blacksmithConditionDC = DC_Blacksmith -- 15
        end

        RequestActiveRoll(user.Character, me, Skill.SleightOfHand, blacksmithConditionDC, "KELA_Upgrading_RollEvent")
    end

    helpers.ApplyStatus = function()
        ApplyStatus(validWeaponForUpgrade, statusForUpgrade, true, -1, me)
        SetWeaponUnsheathed(user,false, false)
        RemoveStatus(coreTool, messageInProcess)
        RemoveStatus(user, "KELA_GUILD_ARTISAN_SKILLCHECK_BONUS")
        RemoveStatus(user, "KELA_ALCH_ELIXIR_CONCENTRATION_BONUS")
        RemoveStatus(user, "KELA_WEAPON_PROFICIENCY_SKILLCHECK_BONUS")
    end

    nodes.WeaponUpgradeTool = Action {
        function()
            WaitForInterrupt()
        end
        
        -- OnInterrupt = function()
        --     SetEntityEvent(me, "WeaponUpgradeTool OnInterrupt", me)
        -- end
    }

    self.OnInit = function()
        helpers.Init()
    end

    events.UseStarted = function(e)
        if e.Object == me then
            user = e.User          
            helpers.UseStartedSetup(e)

            -- SetEntityEvent(me, "UseStarted validWeaponForUpgrade " .. tostring(validWeaponForUpgrade), me)
            -- SetEntityEvent(me, "UseStarted User " .. e.User.Name, me)
            -- SetEntityEvent(me, "UseStarted userLevel " .. tostring(userLevel), me)
            -- SetEntityEvent(me, "UseStarted isProficientWithWeaponForUpgrade " .. tostring(isProficientWithWeaponForUpgrade), me)
            -- SetEntityEvent(me, "UseStarted ownerOfSmithOil " .. tostring(ownerOfSmithOil), me)

            -- can this player use the tool?
            if not helpers.CanPlayerUseTool() then
                return
            end

            validWeaponForUpgrade = helpers.GetValidWeaponForUpgrade()
            -- no weapon to upgrade in hands
            if validWeaponForUpgrade == null then
                -- weapon too damaged
                if weaponIsDamaged then
                    ApplyStatus(coreTool, "KELA_MESSAGE_SUITABLE_WEAPON_TOO_DAMAGED", true, 5.0, user) 
                else
                    ApplyStatus(coreTool, messageNoSuitableWeapon, true, 5.0, user)
                end
                    StartAutomatedDialogImmediate(Dialog("GLO_AD_CannotUseNow_057cb7cf-5aa4-1ed7-9639-65530939b2f9"), user)
                return
            end
            
            -- no smith oil
            if ownerOfSmithOil == null and not HasActiveStatus(coreTool, "KELA_MESSAGE_PLAYER_HAS_NOT_SMITH_OIL") then    
                ApplyStatus(coreTool, "KELA_MESSAGE_PLAYER_HAS_NOT_SMITH_OIL", true, 5.0, user) 
                return
            end         
            
            helpers.StartUpgrading()

        end        

    end

    events.RollResult = function(e)
        if e.RollSubject == me and e.Event == "KELA_SetStatusForGoodUpgrade_RollEvent" then
            if e.Type == RollResultType.Success then
                if userLevel >= 12 then
                    statusForUpgrade = upgradeStatusGood_5
                elseif userLevel >= 10 then
                    statusForUpgrade = upgradeStatusGood_4
                elseif userLevel >= 8 then
                    statusForUpgrade = upgradeStatusGood_3
                elseif userLevel >= 6 then
                    statusForUpgrade = upgradeStatusGood_2
                end
            end
            -- helpers.ApplyStatus()
        end
    end
   
    events.EntityEvent = function(e)
        if e.TargetEntity == me then
            if e.Event == "KELAANVIL" or e.Event == "KELAWHETSTONE" or e.Event == "KELAWORKBENCH" then
                coreTool = e.Params[1]
                coreToolTag = e.Event
                messageNoSuitableWeapon = "KELA_MESSAGE_NO_SUITABLE_WEAPON_" .. e.Event
                messageInProcess = "KELA_MESSAGE_UPGRADE_IN_PROCESS_" .. e.Event
            elseif e.Event == "KELA_SetUserLevel" then
                if type(e.Params[1]) == "number" then
                    userLevel = e.Params[1]
                end
            elseif e.Event == "KELA_SetProficiencyWithWeapon" then
                isProficientWithWeaponForUpgrade = false
                if e.Params[1] == 1 then
                    isProficientWithWeaponForUpgrade = true
                end
            elseif e.Event == "KELA_SetOwnerOfSmithOil" then
                ownerOfSmithOil = null
                if e.Params[1].UUID ~= Guid("NULL_00000000-0000-0000-0000-000000000000") then
                    ownerOfSmithOil = e.Params[1]
                end
            elseif e.Event == "KELA_Stop_Upgrade_Timer" then
                RemoveStatus(user, "KELA_USER_BLOCK_MOVEMENT")   
                helpers.StopUpgrading()
            elseif e.Event == "KELA_Stop_ApplyStatus_Timer" then
                helpers.RemoveAllUpgrades()
                helpers.ApplyStatus()
            elseif e.Event == "KELA_RollResultCriticalNot" then
                if e.Params[1] == 1 then
                    statusForUpgrade = upgradeStatusGood_1
                    if userBlacksmith then 
                        helpers.SetStatusForGoodUpgrade()
                        SetEntityEvent(me,"KELA_Start_ApplyStatus_Timer")
                    else
                        helpers.RemoveAllUpgrades()
                        helpers.ApplyStatus()
                    end
                    if userGuildArtisan then
                        ApplyStatus(validWeaponForUpgrade, upgradeStatusGood_Artisan, true, -1, me)
                    end
                elseif e.Params[1] == 0 then 
                    helpers.SetStatusForBadUpgrade()
                    helpers.RemoveAllUpgrades()
                    helpers.ApplyStatus()
                end
            elseif e.Event == "KELA_RollResultCriticalSuccess" then
                if userLevel >= 12 then
                    statusForUpgrade = upgradeStatusGood_5
                elseif userLevel >= 10 then
                    statusForUpgrade = upgradeStatusGood_4
                elseif userLevel >= 8 then
                    statusForUpgrade = upgradeStatusGood_3
                else
                    statusForUpgrade = upgradeStatusGood_2
                end
                helpers.RemoveAllUpgrades()
                helpers.ApplyStatus()
                if userGuildArtisan then
                    ApplyStatus(validWeaponForUpgrade, upgradeStatusGood_Artisan, true, -1, me)
                end
            elseif e.Event == "KELA_RollResultCriticalFail" then
                helpers.RemoveAllUpgrades()
                statusForUpgrade = upgradeStatusBad_3
                helpers.ApplyStatus()
            end
        end
    end

end
}